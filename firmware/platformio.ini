# Take following steps:
# 1. Connect ISP
# 2. Set Fuses
# 3. Upload

# 1MHz configuration consumes around 700uA. I uses internal 8MHz 
# oscillator as a system clock source with 8x prescaler. 

# 128KHz configuration uses WatchDog 128Mhz low power oscillator
# as a system clock source. It allows to decrease microcontroller 
# power consumption 5 times (up to 140uA). But as a payback some
# animations might flicker as microcontroller will need extra
# time to calculate next LED state.

# WARNING: for successfull upload any 1MHz configuration your 
# programmer must support "slow sck" mode.

[env]
platform = atmelavr
framework = arduino
build_flags = !python compile_animation.py

[1MHz]
f_cpu = 1000000L
hfuse = 0xDF
lfuse = 0x62

[128KHz]
f_cpu = 128000L
hfuse = 0xDF
lfuse = 0xE4

[ArduinoISP]
upload_port = COM6
upload_speed = 19200
upload_protocol = stk500v1
upload_flags = ${ArduinoISP.upload_flags}
    -P$UPLOAD_PORT
    -b$UPLOAD_SPEED

[USBasp]
upload_protocol = usbasp
upload_flags = -Pusb

[env:ATtiny25_1MHz_USBasp]
upload_protocol = ${USBasp.upload_protocol}
upload_flags = ${USBasp.upload_flags}
board = attiny25
board_build.mcu = attiny25
board_build.f_cpu = ${1MHz.f_cpu}
board_fuses.hfuse = ${1MHz.hfuse}
board_fuses.lfuse = ${1MHz.lfuse}

[env:ATtiny45_1MHz_USBasp]
upload_protocol = ${USBasp.upload_protocol}
upload_flags = ${USBasp.upload_flags}
board = attiny45
board_build.mcu = attiny45
board_build.f_cpu = ${1MHz.f_cpu}
board_fuses.hfuse = ${1MHz.hfuse}
board_fuses.lfuse = ${1MHz.lfuse}

[env:ATtiny85_1MHz_USBasp]
upload_protocol = ${USBasp.upload_protocol}
upload_flags = ${USBasp.upload_flags}
board = attiny85
board_build.mcu = attiny85
board_build.f_cpu = ${1MHz.f_cpu}
board_fuses.hfuse = ${1MHz.hfuse}
board_fuses.lfuse = ${1MHz.lfuse}

[env:ATtiny25_128KHz_USBasp]
upload_protocol = ${USBasp.upload_protocol}
upload_flags = ${USBasp.upload_flags}
board = attiny25
board_build.mcu = attiny25
board_build.f_cpu = ${128KHz.f_cpu}
board_fuses.hfuse = ${128KHz.hfuse}
board_fuses.lfuse = ${128KHz.lfuse}

[env:ATtiny45_128KHz_USBasp]
upload_protocol = ${USBasp.upload_protocol}
upload_flags = ${USBasp.upload_flags}
board = attiny45
board_build.mcu = attiny45
board_build.f_cpu = ${128KHz.f_cpu}
board_fuses.hfuse = ${128KHz.hfuse}
board_fuses.lfuse = ${128KHz.lfuse}

[env:ATtiny85_128KHz_USBasp]
upload_protocol = ${USBasp.upload_protocol}
upload_flags = ${USBasp.upload_flags}
board = attiny85
board_build.mcu = attiny85
board_build.f_cpu = ${128KHz.f_cpu}
board_fuses.hfuse = ${128KHz.hfuse}
board_fuses.lfuse = ${128KHz.lfuse}

[env:ATtiny25_1MHz_ArduinoISP]
upload_protocol = ${ArduinoISP.upload_protocol}
upload_flags = ${ArduinoISP.upload_flags}
board = attiny25
board_build.mcu = attiny25
board_build.f_cpu = ${1MHz.f_cpu}
board_fuses.hfuse = ${1MHz.hfuse}
board_fuses.lfuse = ${1MHz.lfuse}

[env:ATtiny45_1MHz_ArduinoISP]
upload_protocol = ${ArduinoISP.upload_protocol}
upload_flags = ${ArduinoISP.upload_flags}
board = attiny45
board_build.mcu = attiny45
board_build.f_cpu = ${1MHz.f_cpu}
board_fuses.hfuse = ${1MHz.hfuse}
board_fuses.lfuse = ${1MHz.lfuse}

[env:ATtiny85_1MHz_ArduinoISP]
upload_protocol = ${ArduinoISP.upload_protocol}
upload_flags = ${ArduinoISP.upload_flags}
board = attiny85
board_build.mcu = attiny85
board_build.f_cpu = ${1MHz.f_cpu}
board_fuses.hfuse = ${1MHz.hfuse}
board_fuses.lfuse = ${1MHz.lfuse}

[env:ATtiny25_128KHz_ArduinoISP]
upload_protocol = ${ArduinoISP.upload_protocol}
upload_flags = ${ArduinoISP.upload_flags}
board = attiny25
board_build.mcu = attiny25
board_build.f_cpu = ${128KHz.f_cpu}
board_fuses.hfuse = ${128KHz.hfuse}
board_fuses.lfuse = ${128KHz.lfuse}

[env:ATtiny45_128KHz_ArduinoISP]
upload_protocol = ${ArduinoISP.upload_protocol}
upload_flags = ${ArduinoISP.upload_flags}
board = attiny45
board_build.mcu = attiny45
board_build.f_cpu = ${128KHz.f_cpu}
board_fuses.hfuse = ${128KHz.hfuse}
board_fuses.lfuse = ${128KHz.lfuse}

[env:ATtiny85_128KHz_ArduinoISP]
upload_protocol = ${ArduinoISP.upload_protocol}
upload_flags = ${ArduinoISP.upload_flags}
board = attiny85
board_build.mcu = attiny85
board_build.f_cpu = ${128KHz.f_cpu}
board_fuses.hfuse = ${128KHz.hfuse}
board_fuses.lfuse = ${128KHz.lfuse}